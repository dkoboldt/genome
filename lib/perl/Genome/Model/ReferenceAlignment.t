#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}
use above "Genome";
use Test::More tests => 7;

my $m = Genome::Model->get(2771359026);
ok($m, "got a model");

my $ref_seq_name = $m->reference_sequence_name;
is($ref_seq_name, 'NCBI-human-build36', 'The ref_seq of the model matches the expected');

my $merger_name  = $m->merger_name;
is($merger_name, 'samtools', 'The merger used in the model matches the expected');

# we may build and build again, but just test this build...
# TODO: mock
#my $build_id = 96402993; This build does not exist anymore.
my $build_id = 97848505;
my @completed = $m->completed_builds;
for my $b (@completed) {
    next if $b->id == $build_id;
    $b->status('Running');
    $b->date_completed(undef);
}

my $last_complete_build = $m->last_complete_build;
unless ($last_complete_build->id == $build_id) {
    die "Failed to force model " . $m->id . " to use build " . $build_id . " as its last complete build.  Got " . $last_complete_build->id;
}

my $data_directory = $m->complete_build_directory;
my $expected ='model_data/2771359026/build97848505';
like($data_directory, qr/$expected$/, "resolved data directory");  # FIX WHEN WE SWITCH MODELS

my $f = $m->accumulated_alignments_directory();
is($f, "$data_directory/alignments", "found alignments directory");

is($m->experimental_subject, $m->subject, 'experimental subject return subject that is a sample');
ok(!$m->control_subject, 'control subject returns nothing');


sub all_exist {
    return (!(grep{ ! -e $_ } @_) ? 1 : 0);
}
