#!/usr/bin/env genome-perl

use POSIX;
use Data::Dumper;
use Sort::Naturally qw/nsort/;
use IO::File;
use File::Temp qw/tempdir/;
use File::Slurp qw/read_file/;
use Test::More;
use above 'Genome';

use warnings;
use strict;
BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    # don't run workflow through lsf
    $ENV{NO_LSF} = 1;
}

my $pkg = 'Genome::Model::PhenotypeCorrelation::Command::ParallelClinicalCorrelation';
use_ok($pkg);

my $test_data_dir = $ENV{GENOME_TEST_INPUTS} . "/Genome-Model-PhenotypeCorrelation-testdata/CaseControl";


my $tmpdir = tempdir(
    't-ParallelClinicalCorrelation-XXXXX',
    TMPDIR => 1,
    CLEANUP => 1
);

# TEST!
my $variant_matrix = "$test_data_dir/variant_matrix.txt";
my $glm_model_file = "$test_data_dir/glm-model.txt";
my $clinical_data_file = "$test_data_dir/clinical.txt";
my $sample_list_file = "$test_data_dir/samples.txt";
my $output_prefix = "$tmpdir/parallel.txt";
my $glm_output_file = "$tmpdir/parallel.txt.glm.tsv";
my $categorical_output_file = "$tmpdir/parallel.txt.categorical.tsv";
my $orig_output_file_prefix = "$tmpdir/orig.txt";
my $orig_glm_output_file = "$orig_output_file_prefix.glm.tsv";
my $orig_categorical_output_file = "$orig_output_file_prefix.categorical.tsv";
my $categorical_clinical_data_file = "$tmpdir/categorical.txt";

my $parallel_cmd = $pkg->create(
        variant_matrix => $variant_matrix,
        output_prefix => $output_prefix,
        sample_list_file => $sample_list_file,
        clinical_data_file => $clinical_data_file,
        glm_model_file => $glm_model_file,
        max_cols_per_file => 5,
        work_directory => $tmpdir,
    );
ok($parallel_cmd, "Created command object");
ok($parallel_cmd->execute, "Executed command");
ok(-s $glm_output_file, "Output file exists");
$parallel_cmd->_make_categorical_data_file($categorical_clinical_data_file);
ok(-s $categorical_clinical_data_file, "categorical clinical data file exists");


# this is needed to force cleanup of intermediate files
$parallel_cmd->delete;

my @files = glob("$tmpdir/*");
is(scalar @files, 3, "No intermediate files in output directory") or
    diag "Output files:\n\t" . join("\n\t", @files) . "\n";

my %orig_params = (
    genetic_data_type => "variant",
    bam_list => $sample_list_file,
    output_file => $orig_output_file_prefix,
    glm_model_file => $glm_model_file,
    glm_clinical_data_file => $clinical_data_file,
    input_clinical_correlation_matrix_file => $variant_matrix,
    categorical_clinical_data_file => $categorical_clinical_data_file,
);

my $orig_cmd = Genome::Model::Tools::Music::ClinicalCorrelation->execute(
    %orig_params
);
ok($orig_cmd->result, "Ran non-parallel clinical correlation");
my $diff = Genome::Sys->diff_file_vs_file($glm_output_file, $orig_glm_output_file);
ok(!$diff, 'Parallel method got same glm result as original method')
    or diag("diff results:\n" . $diff);


$diff = Genome::Sys->diff_file_vs_file($categorical_output_file, $orig_categorical_output_file);
ok(!$diff, 'Parallel method got same FET result as original method')
    or diag("diff results:\n" . $diff);

done_testing();
