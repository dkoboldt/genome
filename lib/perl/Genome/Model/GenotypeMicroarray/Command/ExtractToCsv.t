#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
};

use above 'Genome';

require File::Temp;
require File::Compare;
use Test::More;

use_ok('Genome::Model::GenotypeMicroarray::Command::ExtractToCsv') or die;
use_ok('Genome::Model::GenotypeMicroarray::Test') or die;

my $tmpdir = File::Temp::tempdir(CLEANUP => 1);
my $build = Genome::Model::GenotypeMicroarray::Test::example_build();

# FAIL - no build
my $extract = Genome::Model::GenotypeMicroarray::Command::ExtractToCsv->create();
ok(!$extract->execute, 'failed to create command w/o buil');

# BUILD
my $output_tsv = $tmpdir.'/genotypes-from-build.tsv';
$extract = Genome::Model::GenotypeMicroarray::Command::ExtractToCsv->create(
    build => $build,
    output => $output_tsv,
);
ok($extract, 'create extract command');
ok($extract->execute, 'execute extract command');
is(File::Compare::compare($output_tsv, $build->original_genotype_file_path), 0, 'genotype tsv matches');
is($extract->genotypes_input, 9, 'genotypes input');
is($extract->genotypes_output, 9, 'genotypes output');
is($extract->genotypes_filtered, 0, 'genotypes filtered');
#print "gvimdiff $output_tsv ".$build->original_genotype_file_path."\n"; <STDIN>;

done_testing();
