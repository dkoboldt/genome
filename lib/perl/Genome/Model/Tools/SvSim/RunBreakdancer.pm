package Genome::Model::Tools::SvSim::RunBreakdancer;

use Genome;

use strict;
use warnings;

my $DEFAULT_VERSION = "1.4.2";

class Genome::Model::Tools::SvSim::RunBreakdancer {
    is => "Command::V2",
    has_param => [
        lsf_resource => {
            default_value => "-M 4000000 -R 'select[mem>4000] rusage[mem=4000]'"
        },
    ],
    has_input => [
        config_path => {
            is => "Text",
            doc => "Path to the breakdancer config file, generated by bam2cfg.pl",
        },
        extra_options => {
            is => "Text",
            doc => "Extra bd cmdline args",
            default_value => "-q10",
            is_optional => 1,
        },
        dump_fastq => {
            is => "Boolean",
            doc => "Prefix for dumping fastqs for assembly",
            default_value => 1,
            is_optional => 1,
        },
        sequence_name => {
            is => "Text",
            doc => "The sequence to run on",
        },
        use_version => {
            is => "Text",
            doc => "The breakdancer version to use",
            default_value => $DEFAULT_VERSION,
            is_optional => 1,
        },
    ],
    has_output => [
        output_directory => {
            is_input => 1,
            is => "Text",
            doc => "SV output directory",
            is_optional => 1,
        },
        output_path_svs => {
            doc => "Output path to breakdancer sv call file",
            is_optional => 1,
        },
    ],
};

sub command_line {
    my $self = shift;

    my $bd = Genome::Model::Tools::Breakdancer->create(
        use_version => $self->use_version
        );

    my $exe_path = $bd->breakdancer_max_command;

    my $seq = $self->sequence_name;
    my $config_path = $self->config_path;

    my @cmdline = ($exe_path);
    if ($seq eq 'CTX') {
        push @cmdline, "-t";
    }
    else {
        push @cmdline, "-o $seq";
    }

    my $output_dir = sprintf("%s/%s", $self->output_directory, $seq);
    # FIXME: remove side effect
    Genome::Sys->create_directory($output_dir);
    my $output_file = sprintf("%s/svs.txt", $output_dir);
    my $error_file = sprintf("%s/svs.stderr", $output_dir);
    $self->output_path_svs($output_file);

    if ($self->dump_fastq) {
        my $fastq_prefix = sprintf("%s/bd", $output_dir);
        push(@cmdline, "-d", $fastq_prefix);
    }

    if ($self->extra_options) {
        push(@cmdline, $self->extra_options);
    }
    push(@cmdline, $config_path,
        "1>", $output_file,
        "2>", $error_file
        );

    return join(" ", @cmdline);
}

sub execute {
    my $self = shift;
    return Genome::Sys->shellcmd(cmd => $self->command_line);
}

1;
