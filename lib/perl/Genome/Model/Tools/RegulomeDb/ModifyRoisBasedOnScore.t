#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use Genome::Utility::Test qw(compare_ok abort);

my $class = 'Genome::Model::Tools::RegulomeDb::ModifyRoisBasedOnScore';
use_ok($class);
my $version = "v1";
my $data_dir = Genome::Utility::Test->data_dir_ok($class, $version) or abort;

my $cmd = $class->create(valid_scores => ["1", "2"]);
my $score_line1 = "chr11\t5248049\t5248050\t1f";
my $score_line2 = "chr11\t5248050\t5248051\t2c";
my $score_line3 = "chr11\t5248051\t5248052\t3a";

ok($cmd->good_score($score_line1), "1f is a good score");
ok($cmd->good_score($score_line2), "2c is a good score");
ok(!$cmd->good_score($score_line3), "3a is not a good score");

my $tmp = Genome::Sys->create_temp_file_path;
my $expected = join("/", $data_dir, "expected.out");
my $rv = $class->execute(output_file => $tmp, roi_list => join("/", $data_dir, "test.roi"),
                       scored_regions => join("/", $data_dir, "scored.roi"),
                       valid_scores => [qw(1 2)],
                      );
ok($rv, "Command executed successfully");
compare_ok($tmp, $expected, "Result was generated as expected");

done_testing;

