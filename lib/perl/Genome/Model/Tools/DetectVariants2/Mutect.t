#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{NO_LSF} = 1;
};

use File::Path;
use File::Temp;
use Test::More;
use above 'Genome';
use Genome::SoftwareResult;
use Genome::Test::Factory::SoftwareResult::User;

my $archos = `uname -a`;
if ($archos !~ /64/) {
    plan skip_all => "Must run from a 64-bit machine";
}

use_ok('Genome::Model::Tools::DetectVariants2::Mutect');

my $refbuild_id = 106942997;
my $ref_seq_build = Genome::Model::Build::ImportedReferenceSequence->get($refbuild_id);
ok($ref_seq_build, 'GRCh37-lite-build37 reference sequence build') or die;

my $tumor =  $ENV{GENOME_TEST_INPUTS} . "/Genome-Model-Tools-DetectVariants2-Mutect/tiny.tumor.bam";
my $normal = $ENV{GENOME_TEST_INPUTS} . "/Genome-Model-Tools-DetectVariants2-Mutect/tiny.normal.bam";

#Define path to a custom reference sequence build dir
my $custom_reference_dir = $ENV{GENOME_TEST_INPUTS} . "/Genome-Model-Tools-DetectVariants2-Mutect/custom_reference";
ok(-e $custom_reference_dir, "Found the custom reference dir: $custom_reference_dir");

#Use small reference sequence build by setting up a custom reference genome model
my $reduced_ref_seq_build = Genome::Model::Build::ReferenceSequence->create(
    model => $ref_seq_build->model,
    version => "37",
    data_directory => $custom_reference_dir,
);
ok($reduced_ref_seq_build, "Created a reduced reference sequence build for testing") or die;

my $result_users = Genome::Test::Factory::SoftwareResult::User->setup_user_hash(
    reference_sequence_build => $reduced_ref_seq_build,
);

my $test_base_dir = File::Temp::tempdir('MutectXXXXX', CLEANUP => 1, TMPDIR => 1);

my $mutect = Genome::Model::Tools::DetectVariants2::Mutect->create(aligned_reads_input=>$tumor, 
                                                                   control_aligned_reads_input=>$normal,
                                                                   output_directory => $test_base_dir,
                                                                   reference_build_id => $reduced_ref_seq_build->id,
                                                                   version => '1.1.4',
                                                                   params => '--number-of-chunks 5;',
                                                                   aligned_reads_sample => 'test',
                                                                   result_users => $result_users,
                                                                   );
ok($mutect, 'mutect command created');
$mutect->dump_status_messages(1);
my $rv = $mutect->execute;
is($rv, 1, 'Testing for successful execution.  Expecting 1.  Got: '.$rv);

#should probably do some file diffing here although that would be mirrored in other places...
done_testing();
