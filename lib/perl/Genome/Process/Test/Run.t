#!/usr/bin/env genome-perl

use strict;
use warnings FATAL => 'all';

use Test::More;
use above 'Genome';
use Genome::Utility::Test qw(compare_ok);
use File::Slurp qw(read_file);

BEGIN {
    $ENV{NO_LSF} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

my $pkg = 'Genome::Process::Command::Run';
use_ok($pkg) || die;

my $test_dir = __FILE__ . '.d';
if (-d $test_dir) {
    note "Found test directory ($test_dir)";
} else {
    die "Failed to find test directory ($test_dir)";
}

my $input_workflow = File::Spec->join($test_dir, 'workflow.xml');
my $workflow_xml = read_file($input_workflow);
my $inputs = {statement => 'this is only a test'};

my $p = Genome::Process::Test::Process->create(%$inputs);
is(scalar(@{[$p->status_events]}), 1, 'found all expected status_events');

my $outputs = $p->run(workflow_xml => $workflow_xml, workflow_inputs => $inputs);
is_deeply($outputs, {some_output=>'this is only a test'}, 'got expected outputs from workflow');

ok(-f $p->workflow_file, 'found workflow file in metadata directory');
ok(-f $p->inputs_file, 'found inputs file in metadata directory');
ok(-f $p->environment_file, 'found environment file in metadata directory');

is($p->status, 'Succeeded', 'process succeeded as expected');
is(scalar(@{[$p->status_events]}), 3, 'found all expected status_events');


done_testing();
