#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use List::Util qw(shuffle);
use Test::Deep;

my $pkg = 'Genome::VariantReporting::Suite::BamReadcount::VafInterpreterHelpers';
use_ok($pkg);

my %test_setup = (
    'custom_vaf_sort - one sample' => {
        headers => [qw(sample_ref_count sample_var_count sample_vaf)],
        sample_names => ['sample'],
    },
    'custom_vaf_sort - multiple samples' => {
        headers => [qw(
            sample1_ref_count sample1_var_count sample1_vaf
            sample2_ref_count sample2_var_count sample2_vaf
        )],
        sample_names => ['sample1', 'sample2'],
    },
    'custom_vaf_sort - per library' => {
        headers => [qw(
            sample-library1_ref_count sample-library1_var_count sample-library1_vaf
            sample-library2_ref_count sample-library2_var_count sample-library2_vaf
        )],
        sample_names => ['sample'],
        library_names => ['library1', 'library2'],
    },
    'custom_vaf_sort - cle per sample' => {
        headers => [qw(
            Normal(H_KA-174556-1309237)_ref_count
            Normal(H_KA-174556-1309237)_var_count
            Normal(H_KA-174556-1309237)_vaf
            Discovery(H_KA-174556-1309245)_ref_count
            Discovery(H_KA-174556-1309245)_var_count
            Discovery(H_KA-174556-1309245)_vaf
            Followup(H_KA-174556-1309246)_ref_count
            Followup(H_KA-174556-1309246)_var_count
            Followup(H_KA-174556-1309246)_vaf
        )],
        sample_names => ['H_KA-174556-1309237', 'H_KA-174556-1309245', 'H_KA-174556-1309246'],
        library_names => ['Library1', 'Library2', 'Library3'],
    },
    'custom_vaf_sort - cle per library' => {
        headers => [qw(
            Normal-Library1(H_KA-174556-1309237-lg3-lib1)_ref_count
            Normal-Library1(H_KA-174556-1309237-lg3-lib1)_var_count
            Normal-Library1(H_KA-174556-1309237-lg3-lib1)_vaf
            Normal-Library2(H_KA-174556-1309237-lg4-lib1)_ref_count
            Normal-Library2(H_KA-174556-1309237-lg4-lib1)_var_count
            Normal-Library2(H_KA-174556-1309237-lg4-lib1)_vaf
            Normal-Library3(H_KA-174556-1309237-lg5-lib1)_ref_count
            Normal-Library3(H_KA-174556-1309237-lg5-lib1)_var_count
            Normal-Library3(H_KA-174556-1309237-lg5-lib1)_vaf
            Discovery-Library1(H_KA-174556-1309245-lg3-lib1)_ref_count
            Discovery-Library1(H_KA-174556-1309245-lg3-lib1)_var_count
            Discovery-Library1(H_KA-174556-1309245-lg3-lib1)_vaf
            Discovery-Library2(H_KA-174556-1309245-lg5-lib1)_ref_count
            Discovery-Library2(H_KA-174556-1309245-lg5-lib1)_var_count
            Discovery-Library2(H_KA-174556-1309245-lg5-lib1)_vaf
            Discovery-Library3(H_KA-174556-1309245-lg6-lib1)_ref_count
            Discovery-Library3(H_KA-174556-1309245-lg6-lib1)_var_count
            Discovery-Library3(H_KA-174556-1309245-lg6-lib1)_vaf
            Followup-Library1(H_KA-174556-1309246-lg2-lib1)_ref_count
            Followup-Library1(H_KA-174556-1309246-lg2-lib1)_var_count
            Followup-Library1(H_KA-174556-1309246-lg2-lib1)_vaf
            Followup-Library2(H_KA-174556-1309246-lg4-lib1)_ref_count
            Followup-Library2(H_KA-174556-1309246-lg4-lib1)_var_count
            Followup-Library2(H_KA-174556-1309246-lg4-lib1)_vaf
            Followup-Library3(H_KA-174556-1309246-lg5-lib1)_ref_count
            Followup-Library3(H_KA-174556-1309246-lg5-lib1)_var_count
            Followup-Library3(H_KA-174556-1309246-lg5-lib1)_vaf
        )],
        sample_names => ['H_KA-174556-1309237', 'H_KA-174556-1309245', 'H_KA-174556-1309246'],
        library_names => ['Library1', 'Library2', 'Library3'],
    }
);

while (my ($test_name, $test_data) = each %test_setup) {
    subtest $test_name => sub {
        my @headers = @{$test_data->{headers}};
        my @sorted_headers = Genome::VariantReporting::Suite::BamReadcount::VafInterpreterHelpers::sort_vaf_headers(
            headers => [unsort(@headers)],
            sample_names => $test_data->{sample_names},
            library_names => $test_data->{library_names},
        );
        is_deeply([@sorted_headers], [@headers], 'Sample vaf headers sorted as expected');
    };
}

done_testing;

sub unsort {
    my @header = @_;
    my $middle = int(@header / 2);
    my @left = splice(@header, 0, $middle);
    return shuffle(@header), shuffle(@left);
}
