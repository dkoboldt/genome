<?xml version="1.0"?>
<operation name="Trio Report">
  <operationtype typeClass="Workflow::OperationType::Model">
    <inputproperty>Alignment stats.models</inputproperty>
    <inputproperty>Coverage stats.models</inputproperty>
    <inputproperty>Create IGV session (test roi).bam_hash_json</inputproperty>
    <inputproperty>Create IGV session (test roi).genome_name</inputproperty>
    <inputproperty>Create IGV session (test roi).label</inputproperty>
    <inputproperty>Create IGV session (test roi).reference_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (bed).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (bed).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (full).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (full).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (simple).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (simple).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (full).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (simple).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (vcf).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (vcf).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).variant_type</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (full).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (simple).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (vcf).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (vcf).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).variant_type</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (bed).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (bed).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (docm).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (docm).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (docm).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (docm).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (docm).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).variant_type</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (docm).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (docm).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).variant_type</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (bed).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (bed).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (full).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (full).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (simple).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (simple).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (full).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (simple).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (vcf).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (vcf).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).variant_type</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (full).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (simple).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (vcf).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (vcf).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).variant_type</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (acmg).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (acmg).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (acmg).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (bed).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (bed).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (full).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (full).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (simple).contains_header</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (simple).sort_columns</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (acmg).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (acmg).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (full).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (simple).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (vcf).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (vcf).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).variant_type</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (acmg).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (acmg).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (full).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (full).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (simple).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (simple).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (vcf).label</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (vcf).report_name</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).input_vcf</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).plan_json</inputproperty>
    <inputproperty>Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).variant_type</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (bed).contains_header</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (bed).label</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (bed).sort_columns</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (full).contains_header</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (full).label</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (full).sort_columns</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (simple).contains_header</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (simple).label</inputproperty>
    <inputproperty>Merge Discovery and Followup Reports (simple).sort_columns</inputproperty>
    <inputproperty>process_id</inputproperty>
    <outputproperty>Alignment stats result</outputproperty>
    <outputproperty>Coverage stats result</outputproperty>
    <outputproperty>igv_session.test roi</outputproperty>
    <outputproperty>test roi-discovery_and_followup.merged.bed</outputproperty>
    <outputproperty>test roi-discovery_and_followup.merged.full</outputproperty>
    <outputproperty>test roi-discovery_and_followup.merged.simple</outputproperty>
  </operationtype>
  <operation name="Alignment stats">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::Model::SomaticValidation::Command::RunAlignmentStatsSummary">
      <inputproperty>models</inputproperty>
      <outputproperty>output_result</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge (merged_result (bed))">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>discovery_report_result</inputproperty>
      <inputproperty>followup_report_result</inputproperty>
      <outputproperty>report_results</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge (merged_result (full))">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>discovery_report_result</inputproperty>
      <inputproperty>followup_report_result</inputproperty>
      <outputproperty>report_results</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge (merged_result (simple))">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>discovery_report_result</inputproperty>
      <inputproperty>followup_report_result</inputproperty>
      <outputproperty>report_results</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge for igv (test roi)">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>discovery_bed_report_result</inputproperty>
      <inputproperty>followup_bed_report_result</inputproperty>
      <inputproperty>germline_bed_report_result</inputproperty>
      <inputproperty>docm_bed_report_result</inputproperty>
      <outputproperty>report_results</outputproperty>
    </operationtype>
  </operation>
  <operation name="Coverage stats">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::Model::SomaticValidation::Command::RunCoverageStatsSummary">
      <inputproperty>models</inputproperty>
      <outputproperty>output_result</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Create IGV session (test roi)">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Command::Wrappers::CreateIgvSession">
      <inputproperty>bam_hash_json</inputproperty>
      <inputproperty>genome_name</inputproperty>
      <inputproperty>merged_bed_reports</inputproperty>
      <inputproperty>reference_name</inputproperty>
      <outputproperty>output_result</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Create Snvs, Indels, and Merged Reports (test roi-discovery)">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>Merge Reports (bed).contains_header</inputproperty>
      <inputproperty>Merge Reports (bed).label</inputproperty>
      <inputproperty>Merge Reports (bed).sort_columns</inputproperty>
      <inputproperty>Merge Reports (full).contains_header</inputproperty>
      <inputproperty>Merge Reports (full).label</inputproperty>
      <inputproperty>Merge Reports (full).sort_columns</inputproperty>
      <inputproperty>Merge Reports (simple).contains_header</inputproperty>
      <inputproperty>Merge Reports (simple).label</inputproperty>
      <inputproperty>Merge Reports (simple).sort_columns</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (full).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (full).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (simple).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (simple).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (vcf).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (vcf).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (indels).plan_json</inputproperty>
      <inputproperty>Variant Reporting (indels).variant_type</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (full).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (full).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (simple).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (simple).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (vcf).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (vcf).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (snvs).plan_json</inputproperty>
      <inputproperty>Variant Reporting (snvs).variant_type</inputproperty>
      <inputproperty>process_id</inputproperty>
      <outputproperty>indels_result (bed)</outputproperty>
      <outputproperty>indels_result (full)</outputproperty>
      <outputproperty>indels_result (simple)</outputproperty>
      <outputproperty>indels_result (vcf)</outputproperty>
      <outputproperty>merged_result (bed)</outputproperty>
      <outputproperty>merged_result (full)</outputproperty>
      <outputproperty>merged_result (simple)</outputproperty>
      <outputproperty>snvs_result (bed)</outputproperty>
      <outputproperty>snvs_result (full)</outputproperty>
      <outputproperty>snvs_result (simple)</outputproperty>
      <outputproperty>snvs_result (vcf)</outputproperty>
    </operationtype>
    <operation name="Converge (output_result (bed))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (full))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (simple))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (bed)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (full)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (simple)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Variant Reporting (indels)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (full).label</inputproperty>
        <inputproperty>Generate Report (full).report_name</inputproperty>
        <inputproperty>Generate Report (simple).label</inputproperty>
        <inputproperty>Generate Report (simple).report_name</inputproperty>
        <inputproperty>Generate Report (vcf).label</inputproperty>
        <inputproperty>Generate Report (vcf).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (full)</outputproperty>
        <outputproperty>output_result (simple)</outputproperty>
        <outputproperty>output_result (vcf)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (full)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (simple)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (vcf)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="dbsnp">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Dbsnp::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run dbsnp">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
        <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run dbsnp" toProperty="process_id"/>
      </operation>
      <operation name="homopolymer">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Homopolymer::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>homopolymer_list_id</outputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>max_length</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run homopolymer">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Homopolymer::Run">
            <inputproperty>homopolymer_list_id</inputproperty>
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>max_length</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="homopolymer_list_id" toOperation="Run homopolymer" toProperty="homopolymer_list_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run homopolymer" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run homopolymer" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_length" toOperation="Run homopolymer" toProperty="max_length"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run homopolymer" toProperty="variant_type"/>
        <link fromOperation="Run homopolymer" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run homopolymer" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run homopolymer" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run homopolymer" toProperty="process_id"/>
      </operation>
      <operation name="vep">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Vep::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>custom_annotation_tags</outputproperty>
            <outputproperty>ensembl_version</outputproperty>
            <outputproperty>feature_list_ids</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>plugins</outputproperty>
            <outputproperty>plugins_version</outputproperty>
            <outputproperty>reference_fasta</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>species</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run vep">
          <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Suite::Vep::Run">
            <inputproperty>ensembl_version</inputproperty>
            <inputproperty>feature_list_ids</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>plugins_version</inputproperty>
            <inputproperty>reference_fasta</inputproperty>
            <inputproperty>species</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
        <link fromOperation="Get inputs from plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
        <link fromOperation="Get inputs from plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
        <link fromOperation="Get inputs from plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
        <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run vep" toProperty="process_id"/>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (full)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (full)"/>
      <link fromOperation="Generate Report (simple)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (simple)"/>
      <link fromOperation="Generate Report (vcf)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (vcf)"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="homopolymer" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (full)" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (simple)" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (vcf)" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).label" toOperation="Generate Report (full)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).report_name" toOperation="Generate Report (full)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (full)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (full)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (full)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).label" toOperation="Generate Report (simple)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).report_name" toOperation="Generate Report (simple)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (simple)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (simple)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (simple)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).label" toOperation="Generate Report (vcf)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).report_name" toOperation="Generate Report (vcf)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (vcf)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (vcf)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (vcf)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="dbsnp" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="homopolymer" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="homopolymer" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="homopolymer" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="vep" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
      <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Variant Reporting (snvs)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (full).label</inputproperty>
        <inputproperty>Generate Report (full).report_name</inputproperty>
        <inputproperty>Generate Report (simple).label</inputproperty>
        <inputproperty>Generate Report (simple).report_name</inputproperty>
        <inputproperty>Generate Report (vcf).label</inputproperty>
        <inputproperty>Generate Report (vcf).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (full)</outputproperty>
        <outputproperty>output_result (simple)</outputproperty>
        <outputproperty>output_result (vcf)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (full)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (simple)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (vcf)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="dbsnp">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Dbsnp::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run dbsnp">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
        <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run dbsnp" toProperty="process_id"/>
      </operation>
      <operation name="vep">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Vep::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>custom_annotation_tags</outputproperty>
            <outputproperty>ensembl_version</outputproperty>
            <outputproperty>feature_list_ids</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>plugins</outputproperty>
            <outputproperty>plugins_version</outputproperty>
            <outputproperty>reference_fasta</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>species</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run vep">
          <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Suite::Vep::Run">
            <inputproperty>ensembl_version</inputproperty>
            <inputproperty>feature_list_ids</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>plugins_version</inputproperty>
            <inputproperty>reference_fasta</inputproperty>
            <inputproperty>species</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
        <link fromOperation="Get inputs from plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
        <link fromOperation="Get inputs from plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
        <link fromOperation="Get inputs from plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
        <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run vep" toProperty="process_id"/>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (full)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (full)"/>
      <link fromOperation="Generate Report (simple)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (simple)"/>
      <link fromOperation="Generate Report (vcf)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (vcf)"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (full)" toProperty="input_vcf"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (simple)" toProperty="input_vcf"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (vcf)" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).label" toOperation="Generate Report (full)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).report_name" toOperation="Generate Report (full)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (full)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (full)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (full)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).label" toOperation="Generate Report (simple)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).report_name" toOperation="Generate Report (simple)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (simple)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (simple)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (simple)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).label" toOperation="Generate Report (vcf)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).report_name" toOperation="Generate Report (vcf)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (vcf)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (vcf)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (vcf)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="dbsnp" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="vep" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
      <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="Converge (output_result (bed))" fromProperty="report_results" toOperation="Merge Reports (bed)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (full))" fromProperty="report_results" toOperation="Merge Reports (full)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (simple))" fromProperty="report_results" toOperation="Merge Reports (simple)" toProperty="report_results"/>
    <link fromOperation="Merge Reports (bed)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (bed)"/>
    <link fromOperation="Merge Reports (full)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (full)"/>
    <link fromOperation="Merge Reports (simple)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (simple)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (full)" toOperation="Converge (output_result (full))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (simple)" toOperation="Converge (output_result (simple))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="indels_result (bed)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (full)" toOperation="output connector" toProperty="indels_result (full)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (simple)" toOperation="output connector" toProperty="indels_result (simple)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (vcf)" toOperation="output connector" toProperty="indels_result (vcf)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="Converge (output_result (full))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="Converge (output_result (simple))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Merge Reports (bed)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="Merge Reports (full)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="Merge Reports (simple)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="snvs_result (bed)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="output connector" toProperty="snvs_result (full)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="output connector" toProperty="snvs_result (simple)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (vcf)" toOperation="output connector" toProperty="snvs_result (vcf)"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).contains_header" toOperation="Merge Reports (bed)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).label" toOperation="Merge Reports (bed)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).sort_columns" toOperation="Merge Reports (bed)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (bed)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).contains_header" toOperation="Merge Reports (full)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).label" toOperation="Merge Reports (full)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).sort_columns" toOperation="Merge Reports (full)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (full)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).contains_header" toOperation="Merge Reports (simple)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).label" toOperation="Merge Reports (simple)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).sort_columns" toOperation="Merge Reports (simple)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (simple)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (full).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (full).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (full).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (full).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (simple).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (simple).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (simple).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (simple).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (vcf).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (vcf).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (vcf).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (vcf).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).input_vcf" toOperation="Variant Reporting (indels)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).plan_json" toOperation="Variant Reporting (indels)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).variant_type" toOperation="Variant Reporting (indels)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (indels)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (full).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (full).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (full).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (full).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (simple).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (simple).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (simple).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (simple).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (vcf).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (vcf).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (vcf).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (vcf).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).input_vcf" toOperation="Variant Reporting (snvs)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).plan_json" toOperation="Variant Reporting (snvs)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).variant_type" toOperation="Variant Reporting (snvs)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (snvs)" toProperty="process_id"/>
  </operation>
  <operation name="Create Snvs, Indels, and Merged Reports (test roi-docm)">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>Merge Reports (bed).contains_header</inputproperty>
      <inputproperty>Merge Reports (bed).label</inputproperty>
      <inputproperty>Merge Reports (bed).sort_columns</inputproperty>
      <inputproperty>Merge Reports (docm).contains_header</inputproperty>
      <inputproperty>Merge Reports (docm).label</inputproperty>
      <inputproperty>Merge Reports (docm).sort_columns</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (docm).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (docm).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (indels).plan_json</inputproperty>
      <inputproperty>Variant Reporting (indels).variant_type</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (docm).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (docm).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (snvs).plan_json</inputproperty>
      <inputproperty>Variant Reporting (snvs).variant_type</inputproperty>
      <inputproperty>process_id</inputproperty>
      <outputproperty>indels_result (bed)</outputproperty>
      <outputproperty>indels_result (docm)</outputproperty>
      <outputproperty>merged_result (bed)</outputproperty>
      <outputproperty>merged_result (docm)</outputproperty>
      <outputproperty>snvs_result (bed)</outputproperty>
      <outputproperty>snvs_result (docm)</outputproperty>
    </operationtype>
    <operation name="Converge (output_result (bed))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (docm))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (bed)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (docm)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Variant Reporting (indels)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (docm).label</inputproperty>
        <inputproperty>Generate Report (docm).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (docm)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (docm)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="Generate Report (docm)" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (docm)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (docm)"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (docm).label" toOperation="Generate Report (docm)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (docm).report_name" toOperation="Generate Report (docm)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (docm)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (docm)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (docm)" toProperty="variant_type"/>
    </operation>
    <operation name="Variant Reporting (snvs)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (docm).label</inputproperty>
        <inputproperty>Generate Report (docm).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (docm)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (docm)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="Generate Report (docm)" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (docm)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (docm)"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (docm).label" toOperation="Generate Report (docm)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (docm).report_name" toOperation="Generate Report (docm)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (docm)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (docm)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (docm)" toProperty="variant_type"/>
    </operation>
    <link fromOperation="Converge (output_result (bed))" fromProperty="report_results" toOperation="Merge Reports (bed)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (docm))" fromProperty="report_results" toOperation="Merge Reports (docm)" toProperty="report_results"/>
    <link fromOperation="Merge Reports (bed)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (bed)"/>
    <link fromOperation="Merge Reports (docm)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (docm)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (docm)" toOperation="Converge (output_result (docm))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="indels_result (bed)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (docm)" toOperation="output connector" toProperty="indels_result (docm)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (docm)" toOperation="Converge (output_result (docm))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Merge Reports (bed)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (docm)" toOperation="Merge Reports (docm)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="snvs_result (bed)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (docm)" toOperation="output connector" toProperty="snvs_result (docm)"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).contains_header" toOperation="Merge Reports (bed)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).label" toOperation="Merge Reports (bed)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).sort_columns" toOperation="Merge Reports (bed)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (bed)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (docm).contains_header" toOperation="Merge Reports (docm)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (docm).label" toOperation="Merge Reports (docm)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (docm).sort_columns" toOperation="Merge Reports (docm)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (docm)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (docm).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (docm).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (docm).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (docm).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).input_vcf" toOperation="Variant Reporting (indels)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).plan_json" toOperation="Variant Reporting (indels)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).variant_type" toOperation="Variant Reporting (indels)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (indels)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (docm).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (docm).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (docm).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (docm).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).input_vcf" toOperation="Variant Reporting (snvs)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).plan_json" toOperation="Variant Reporting (snvs)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).variant_type" toOperation="Variant Reporting (snvs)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (snvs)" toProperty="process_id"/>
  </operation>
  <operation name="Create Snvs, Indels, and Merged Reports (test roi-followup)">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>Merge Reports (bed).contains_header</inputproperty>
      <inputproperty>Merge Reports (bed).label</inputproperty>
      <inputproperty>Merge Reports (bed).sort_columns</inputproperty>
      <inputproperty>Merge Reports (full).contains_header</inputproperty>
      <inputproperty>Merge Reports (full).label</inputproperty>
      <inputproperty>Merge Reports (full).sort_columns</inputproperty>
      <inputproperty>Merge Reports (simple).contains_header</inputproperty>
      <inputproperty>Merge Reports (simple).label</inputproperty>
      <inputproperty>Merge Reports (simple).sort_columns</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (full).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (full).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (simple).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (simple).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (vcf).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (vcf).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (indels).plan_json</inputproperty>
      <inputproperty>Variant Reporting (indels).variant_type</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (full).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (full).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (simple).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (simple).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (vcf).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (vcf).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (snvs).plan_json</inputproperty>
      <inputproperty>Variant Reporting (snvs).variant_type</inputproperty>
      <inputproperty>process_id</inputproperty>
      <outputproperty>indels_result (bed)</outputproperty>
      <outputproperty>indels_result (full)</outputproperty>
      <outputproperty>indels_result (simple)</outputproperty>
      <outputproperty>indels_result (vcf)</outputproperty>
      <outputproperty>merged_result (bed)</outputproperty>
      <outputproperty>merged_result (full)</outputproperty>
      <outputproperty>merged_result (simple)</outputproperty>
      <outputproperty>snvs_result (bed)</outputproperty>
      <outputproperty>snvs_result (full)</outputproperty>
      <outputproperty>snvs_result (simple)</outputproperty>
      <outputproperty>snvs_result (vcf)</outputproperty>
    </operationtype>
    <operation name="Converge (output_result (bed))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (full))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (simple))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (bed)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (full)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (simple)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Variant Reporting (indels)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (full).label</inputproperty>
        <inputproperty>Generate Report (full).report_name</inputproperty>
        <inputproperty>Generate Report (simple).label</inputproperty>
        <inputproperty>Generate Report (simple).report_name</inputproperty>
        <inputproperty>Generate Report (vcf).label</inputproperty>
        <inputproperty>Generate Report (vcf).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (full)</outputproperty>
        <outputproperty>output_result (simple)</outputproperty>
        <outputproperty>output_result (vcf)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (full)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (simple)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (vcf)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="dbsnp">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Dbsnp::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run dbsnp">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
        <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run dbsnp" toProperty="process_id"/>
      </operation>
      <operation name="homopolymer">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Homopolymer::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>homopolymer_list_id</outputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>max_length</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run homopolymer">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Homopolymer::Run">
            <inputproperty>homopolymer_list_id</inputproperty>
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>max_length</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="homopolymer_list_id" toOperation="Run homopolymer" toProperty="homopolymer_list_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run homopolymer" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run homopolymer" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_length" toOperation="Run homopolymer" toProperty="max_length"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run homopolymer" toProperty="variant_type"/>
        <link fromOperation="Run homopolymer" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run homopolymer" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run homopolymer" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run homopolymer" toProperty="process_id"/>
      </operation>
      <operation name="vep">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Vep::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>custom_annotation_tags</outputproperty>
            <outputproperty>ensembl_version</outputproperty>
            <outputproperty>feature_list_ids</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>plugins</outputproperty>
            <outputproperty>plugins_version</outputproperty>
            <outputproperty>reference_fasta</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>species</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run vep">
          <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Suite::Vep::Run">
            <inputproperty>ensembl_version</inputproperty>
            <inputproperty>feature_list_ids</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>plugins_version</inputproperty>
            <inputproperty>reference_fasta</inputproperty>
            <inputproperty>species</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
        <link fromOperation="Get inputs from plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
        <link fromOperation="Get inputs from plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
        <link fromOperation="Get inputs from plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
        <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run vep" toProperty="process_id"/>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (full)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (full)"/>
      <link fromOperation="Generate Report (simple)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (simple)"/>
      <link fromOperation="Generate Report (vcf)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (vcf)"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="homopolymer" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (full)" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (simple)" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="Generate Report (vcf)" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).label" toOperation="Generate Report (full)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).report_name" toOperation="Generate Report (full)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (full)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (full)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (full)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).label" toOperation="Generate Report (simple)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).report_name" toOperation="Generate Report (simple)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (simple)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (simple)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (simple)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).label" toOperation="Generate Report (vcf)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).report_name" toOperation="Generate Report (vcf)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (vcf)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (vcf)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (vcf)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="dbsnp" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="homopolymer" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="homopolymer" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="homopolymer" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="vep" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
      <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Variant Reporting (snvs)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (full).label</inputproperty>
        <inputproperty>Generate Report (full).report_name</inputproperty>
        <inputproperty>Generate Report (simple).label</inputproperty>
        <inputproperty>Generate Report (simple).report_name</inputproperty>
        <inputproperty>Generate Report (vcf).label</inputproperty>
        <inputproperty>Generate Report (vcf).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (full)</outputproperty>
        <outputproperty>output_result (simple)</outputproperty>
        <outputproperty>output_result (vcf)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (full)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (simple)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (vcf)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="dbsnp">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Dbsnp::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run dbsnp">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
        <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run dbsnp" toProperty="process_id"/>
      </operation>
      <operation name="vep">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Vep::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>custom_annotation_tags</outputproperty>
            <outputproperty>ensembl_version</outputproperty>
            <outputproperty>feature_list_ids</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>plugins</outputproperty>
            <outputproperty>plugins_version</outputproperty>
            <outputproperty>reference_fasta</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>species</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run vep">
          <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Suite::Vep::Run">
            <inputproperty>ensembl_version</inputproperty>
            <inputproperty>feature_list_ids</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>plugins_version</inputproperty>
            <inputproperty>reference_fasta</inputproperty>
            <inputproperty>species</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
        <link fromOperation="Get inputs from plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
        <link fromOperation="Get inputs from plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
        <link fromOperation="Get inputs from plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
        <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run vep" toProperty="process_id"/>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (full)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (full)"/>
      <link fromOperation="Generate Report (simple)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (simple)"/>
      <link fromOperation="Generate Report (vcf)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (vcf)"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (full)" toProperty="input_vcf"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (simple)" toProperty="input_vcf"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Report (vcf)" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).label" toOperation="Generate Report (full)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).report_name" toOperation="Generate Report (full)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (full)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (full)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (full)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).label" toOperation="Generate Report (simple)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).report_name" toOperation="Generate Report (simple)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (simple)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (simple)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (simple)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).label" toOperation="Generate Report (vcf)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).report_name" toOperation="Generate Report (vcf)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (vcf)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (vcf)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (vcf)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="dbsnp" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="vep" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
      <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="Converge (output_result (bed))" fromProperty="report_results" toOperation="Merge Reports (bed)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (full))" fromProperty="report_results" toOperation="Merge Reports (full)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (simple))" fromProperty="report_results" toOperation="Merge Reports (simple)" toProperty="report_results"/>
    <link fromOperation="Merge Reports (bed)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (bed)"/>
    <link fromOperation="Merge Reports (full)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (full)"/>
    <link fromOperation="Merge Reports (simple)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (simple)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (full)" toOperation="Converge (output_result (full))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (simple)" toOperation="Converge (output_result (simple))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="indels_result (bed)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (full)" toOperation="output connector" toProperty="indels_result (full)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (simple)" toOperation="output connector" toProperty="indels_result (simple)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (vcf)" toOperation="output connector" toProperty="indels_result (vcf)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="Converge (output_result (full))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="Converge (output_result (simple))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Merge Reports (bed)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="Merge Reports (full)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="Merge Reports (simple)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="snvs_result (bed)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="output connector" toProperty="snvs_result (full)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="output connector" toProperty="snvs_result (simple)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (vcf)" toOperation="output connector" toProperty="snvs_result (vcf)"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).contains_header" toOperation="Merge Reports (bed)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).label" toOperation="Merge Reports (bed)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).sort_columns" toOperation="Merge Reports (bed)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (bed)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).contains_header" toOperation="Merge Reports (full)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).label" toOperation="Merge Reports (full)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).sort_columns" toOperation="Merge Reports (full)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (full)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).contains_header" toOperation="Merge Reports (simple)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).label" toOperation="Merge Reports (simple)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).sort_columns" toOperation="Merge Reports (simple)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (simple)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (full).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (full).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (full).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (full).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (simple).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (simple).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (simple).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (simple).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (vcf).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (vcf).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (vcf).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (vcf).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).input_vcf" toOperation="Variant Reporting (indels)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).plan_json" toOperation="Variant Reporting (indels)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).variant_type" toOperation="Variant Reporting (indels)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (indels)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (full).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (full).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (full).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (full).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (simple).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (simple).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (simple).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (simple).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (vcf).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (vcf).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (vcf).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (vcf).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).input_vcf" toOperation="Variant Reporting (snvs)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).plan_json" toOperation="Variant Reporting (snvs)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).variant_type" toOperation="Variant Reporting (snvs)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (snvs)" toProperty="process_id"/>
  </operation>
  <operation name="Create Snvs, Indels, and Merged Reports (test roi-germline)">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>Merge Reports (acmg).contains_header</inputproperty>
      <inputproperty>Merge Reports (acmg).label</inputproperty>
      <inputproperty>Merge Reports (acmg).sort_columns</inputproperty>
      <inputproperty>Merge Reports (bed).contains_header</inputproperty>
      <inputproperty>Merge Reports (bed).label</inputproperty>
      <inputproperty>Merge Reports (bed).sort_columns</inputproperty>
      <inputproperty>Merge Reports (full).contains_header</inputproperty>
      <inputproperty>Merge Reports (full).label</inputproperty>
      <inputproperty>Merge Reports (full).sort_columns</inputproperty>
      <inputproperty>Merge Reports (simple).contains_header</inputproperty>
      <inputproperty>Merge Reports (simple).label</inputproperty>
      <inputproperty>Merge Reports (simple).sort_columns</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (acmg).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (acmg).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (full).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (full).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (simple).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (simple).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (vcf).label</inputproperty>
      <inputproperty>Variant Reporting (indels).Generate Report (vcf).report_name</inputproperty>
      <inputproperty>Variant Reporting (indels).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (indels).plan_json</inputproperty>
      <inputproperty>Variant Reporting (indels).variant_type</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (acmg).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (acmg).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (bed).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (full).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (full).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (simple).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (simple).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (vcf).label</inputproperty>
      <inputproperty>Variant Reporting (snvs).Generate Report (vcf).report_name</inputproperty>
      <inputproperty>Variant Reporting (snvs).input_vcf</inputproperty>
      <inputproperty>Variant Reporting (snvs).plan_json</inputproperty>
      <inputproperty>Variant Reporting (snvs).variant_type</inputproperty>
      <inputproperty>process_id</inputproperty>
      <outputproperty>indels_result (acmg)</outputproperty>
      <outputproperty>indels_result (bed)</outputproperty>
      <outputproperty>indels_result (full)</outputproperty>
      <outputproperty>indels_result (simple)</outputproperty>
      <outputproperty>indels_result (vcf)</outputproperty>
      <outputproperty>merged_result (acmg)</outputproperty>
      <outputproperty>merged_result (bed)</outputproperty>
      <outputproperty>merged_result (full)</outputproperty>
      <outputproperty>merged_result (simple)</outputproperty>
      <outputproperty>snvs_result (acmg)</outputproperty>
      <outputproperty>snvs_result (bed)</outputproperty>
      <outputproperty>snvs_result (full)</outputproperty>
      <outputproperty>snvs_result (simple)</outputproperty>
      <outputproperty>snvs_result (vcf)</outputproperty>
    </operationtype>
    <operation name="Converge (output_result (acmg))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (bed))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (full))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Converge (output_result (simple))">
      <operationtype typeClass="Workflow::OperationType::Converge">
        <inputproperty>snvs_report_result</inputproperty>
        <inputproperty>indels_report_result</inputproperty>
        <outputproperty>report_results</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (acmg)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (bed)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (full)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Merge Reports (simple)">
      <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
        <inputproperty>contains_header</inputproperty>
        <inputproperty>report_results</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="Variant Reporting (indels)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (acmg).label</inputproperty>
        <inputproperty>Generate Report (acmg).report_name</inputproperty>
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (full).label</inputproperty>
        <inputproperty>Generate Report (full).report_name</inputproperty>
        <inputproperty>Generate Report (simple).label</inputproperty>
        <inputproperty>Generate Report (simple).report_name</inputproperty>
        <inputproperty>Generate Report (vcf).label</inputproperty>
        <inputproperty>Generate Report (vcf).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (acmg)</outputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (full)</outputproperty>
        <outputproperty>output_result (simple)</outputproperty>
        <outputproperty>output_result (vcf)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (acmg)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (full)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (simple)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (vcf)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="dbsnp">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Dbsnp::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run dbsnp">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
        <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run dbsnp" toProperty="process_id"/>
      </operation>
      <operation name="homopolymer">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Homopolymer::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>homopolymer_list_id</outputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>max_length</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run homopolymer">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Homopolymer::Run">
            <inputproperty>homopolymer_list_id</inputproperty>
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>max_length</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="homopolymer_list_id" toOperation="Run homopolymer" toProperty="homopolymer_list_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run homopolymer" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run homopolymer" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_length" toOperation="Run homopolymer" toProperty="max_length"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run homopolymer" toProperty="variant_type"/>
        <link fromOperation="Run homopolymer" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run homopolymer" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run homopolymer" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run homopolymer" toProperty="process_id"/>
      </operation>
      <operation name="nhlbi">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Nhlbi::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run nhlbi">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run nhlbi" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run nhlbi" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run nhlbi" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run nhlbi" toProperty="vcf"/>
        <link fromOperation="Run nhlbi" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run nhlbi" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run nhlbi" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run nhlbi" toProperty="process_id"/>
      </operation>
      <operation name="vep">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Vep::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>custom_annotation_tags</outputproperty>
            <outputproperty>ensembl_version</outputproperty>
            <outputproperty>feature_list_ids</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>plugins</outputproperty>
            <outputproperty>plugins_version</outputproperty>
            <outputproperty>reference_fasta</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>species</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run vep">
          <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Suite::Vep::Run">
            <inputproperty>ensembl_version</inputproperty>
            <inputproperty>feature_list_ids</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>plugins_version</inputproperty>
            <inputproperty>reference_fasta</inputproperty>
            <inputproperty>species</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
        <link fromOperation="Get inputs from plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
        <link fromOperation="Get inputs from plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
        <link fromOperation="Get inputs from plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
        <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run vep" toProperty="process_id"/>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (acmg)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (acmg)"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (full)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (full)"/>
      <link fromOperation="Generate Report (simple)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (simple)"/>
      <link fromOperation="Generate Report (vcf)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (vcf)"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="homopolymer" toProperty="input_vcf"/>
      <link fromOperation="homopolymer" fromProperty="output_vcf" toOperation="nhlbi" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (acmg).label" toOperation="Generate Report (acmg)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (acmg).report_name" toOperation="Generate Report (acmg)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (acmg)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (acmg)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (acmg)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).label" toOperation="Generate Report (full)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).report_name" toOperation="Generate Report (full)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (full)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (full)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (full)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).label" toOperation="Generate Report (simple)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).report_name" toOperation="Generate Report (simple)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (simple)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (simple)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (simple)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).label" toOperation="Generate Report (vcf)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).report_name" toOperation="Generate Report (vcf)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (vcf)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (vcf)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (vcf)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="dbsnp" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="homopolymer" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="homopolymer" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="homopolymer" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="nhlbi" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="nhlbi" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="nhlbi" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="vep" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (acmg)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (full)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (simple)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (vcf)" toProperty="input_vcf"/>
      <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Variant Reporting (snvs)">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>Generate Report (acmg).label</inputproperty>
        <inputproperty>Generate Report (acmg).report_name</inputproperty>
        <inputproperty>Generate Report (bed).label</inputproperty>
        <inputproperty>Generate Report (bed).report_name</inputproperty>
        <inputproperty>Generate Report (full).label</inputproperty>
        <inputproperty>Generate Report (full).report_name</inputproperty>
        <inputproperty>Generate Report (simple).label</inputproperty>
        <inputproperty>Generate Report (simple).report_name</inputproperty>
        <inputproperty>Generate Report (vcf).label</inputproperty>
        <inputproperty>Generate Report (vcf).report_name</inputproperty>
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>process_id</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result (acmg)</outputproperty>
        <outputproperty>output_result (bed)</outputproperty>
        <outputproperty>output_result (full)</outputproperty>
        <outputproperty>output_result (simple)</outputproperty>
        <outputproperty>output_result (vcf)</outputproperty>
      </operationtype>
      <operation name="BamReadcount">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Annotate vcf with readcounts">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Annotate">
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>readcount_results</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>aligned_bam_result_id</outputproperty>
            <outputproperty>insertion_centric</outputproperty>
            <outputproperty>max_count</outputproperty>
            <outputproperty>minimum_base_quality</outputproperty>
            <outputproperty>minimum_mapping_quality</outputproperty>
            <outputproperty>per_library</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>version</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::BamReadcount::Run">
            <inputproperty>aligned_bam_result_id</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>insertion_centric</inputproperty>
            <inputproperty>max_count</inputproperty>
            <inputproperty>minimum_base_quality</inputproperty>
            <inputproperty>minimum_mapping_quality</inputproperty>
            <inputproperty>per_library</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>version</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
        <link fromOperation="Get inputs from plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
        <link fromOperation="Get inputs from plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
        <link fromOperation="Get inputs from plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
        <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Annotate vcf with readcounts" toProperty="process_id"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run bam-readcount" toProperty="process_id"/>
      </operation>
      <operation name="Generate Report (acmg)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (bed)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (full)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (simple)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Generate Report (vcf)">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::GenerateReport">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>report_name</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="dbsnp">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Dbsnp::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run dbsnp">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
        <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run dbsnp" toProperty="process_id"/>
      </operation>
      <operation name="nhlbi">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Nhlbi::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>info_string</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>variant_type</outputproperty>
            <outputproperty>vcf</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run nhlbi">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Joinx::Run">
            <inputproperty>info_string</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <inputproperty>vcf</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="info_string" toOperation="Run nhlbi" toProperty="info_string"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run nhlbi" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run nhlbi" toProperty="variant_type"/>
        <link fromOperation="Get inputs from plan" fromProperty="vcf" toOperation="Run nhlbi" toProperty="vcf"/>
        <link fromOperation="Run nhlbi" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run nhlbi" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run nhlbi" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run nhlbi" toProperty="process_id"/>
      </operation>
      <operation name="vep">
        <operationtype typeClass="Workflow::OperationType::Model">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>plan_json</inputproperty>
          <inputproperty>process_id</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
        </operationtype>
        <operation name="Get inputs from plan">
          <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Suite::Vep::Adaptor">
            <inputproperty>plan_json</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>custom_annotation_tags</outputproperty>
            <outputproperty>ensembl_version</outputproperty>
            <outputproperty>feature_list_ids</outputproperty>
            <outputproperty>joinx_version</outputproperty>
            <outputproperty>plugins</outputproperty>
            <outputproperty>plugins_version</outputproperty>
            <outputproperty>reference_fasta</outputproperty>
            <outputproperty>result</outputproperty>
            <outputproperty>species</outputproperty>
            <outputproperty>variant_type</outputproperty>
          </operationtype>
        </operation>
        <operation name="Run vep">
          <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Suite::Vep::Run">
            <inputproperty>ensembl_version</inputproperty>
            <inputproperty>feature_list_ids</inputproperty>
            <inputproperty>input_vcf</inputproperty>
            <inputproperty>joinx_version</inputproperty>
            <inputproperty>plugins_version</inputproperty>
            <inputproperty>reference_fasta</inputproperty>
            <inputproperty>species</inputproperty>
            <inputproperty>variant_type</inputproperty>
            <outputproperty>output_result</outputproperty>
            <outputproperty>output_vcf</outputproperty>
            <outputproperty>result</outputproperty>
          </operationtype>
        </operation>
        <link fromOperation="Get inputs from plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
        <link fromOperation="Get inputs from plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
        <link fromOperation="Get inputs from plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
        <link fromOperation="Get inputs from plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
        <link fromOperation="Get inputs from plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
        <link fromOperation="Get inputs from plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
        <link fromOperation="Get inputs from plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
        <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
        <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
        <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from plan" toProperty="plan_json"/>
        <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from plan" toProperty="variant_type"/>
        <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
        <link fromOperation="input connector" fromProperty="process_id" toOperation="Run vep" toProperty="process_id"/>
      </operation>
      <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
      <link fromOperation="Generate Report (acmg)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (acmg)"/>
      <link fromOperation="Generate Report (bed)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (bed)"/>
      <link fromOperation="Generate Report (full)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (full)"/>
      <link fromOperation="Generate Report (simple)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (simple)"/>
      <link fromOperation="Generate Report (vcf)" fromProperty="output_result" toOperation="output connector" toProperty="output_result (vcf)"/>
      <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="nhlbi" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="BamReadcount" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (acmg).label" toOperation="Generate Report (acmg)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (acmg).report_name" toOperation="Generate Report (acmg)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (acmg)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (acmg)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (acmg)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).label" toOperation="Generate Report (bed)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (bed).report_name" toOperation="Generate Report (bed)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (bed)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (bed)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (bed)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).label" toOperation="Generate Report (full)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (full).report_name" toOperation="Generate Report (full)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (full)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (full)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (full)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).label" toOperation="Generate Report (simple)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (simple).report_name" toOperation="Generate Report (simple)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (simple)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (simple)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (simple)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).label" toOperation="Generate Report (vcf)" toProperty="label"/>
      <link fromOperation="input connector" fromProperty="Generate Report (vcf).report_name" toOperation="Generate Report (vcf)" toProperty="report_name"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Report (vcf)" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="Generate Report (vcf)" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Report (vcf)" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="dbsnp" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="nhlbi" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="nhlbi" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="nhlbi" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="process_id" toOperation="vep" toProperty="process_id"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (acmg)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (bed)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (full)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (simple)" toProperty="input_vcf"/>
      <link fromOperation="nhlbi" fromProperty="output_vcf" toOperation="Generate Report (vcf)" toProperty="input_vcf"/>
      <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="Converge (output_result (acmg))" fromProperty="report_results" toOperation="Merge Reports (acmg)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (bed))" fromProperty="report_results" toOperation="Merge Reports (bed)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (full))" fromProperty="report_results" toOperation="Merge Reports (full)" toProperty="report_results"/>
    <link fromOperation="Converge (output_result (simple))" fromProperty="report_results" toOperation="Merge Reports (simple)" toProperty="report_results"/>
    <link fromOperation="Merge Reports (acmg)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (acmg)"/>
    <link fromOperation="Merge Reports (bed)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (bed)"/>
    <link fromOperation="Merge Reports (full)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (full)"/>
    <link fromOperation="Merge Reports (simple)" fromProperty="output_result" toOperation="output connector" toProperty="merged_result (simple)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (acmg)" toOperation="Converge (output_result (acmg))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (full)" toOperation="Converge (output_result (full))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (simple)" toOperation="Converge (output_result (simple))" toProperty="indels_report_result"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (acmg)" toOperation="output connector" toProperty="indels_result (acmg)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="indels_result (bed)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (full)" toOperation="output connector" toProperty="indels_result (full)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (simple)" toOperation="output connector" toProperty="indels_result (simple)"/>
    <link fromOperation="Variant Reporting (indels)" fromProperty="output_result (vcf)" toOperation="output connector" toProperty="indels_result (vcf)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (acmg)" toOperation="Converge (output_result (acmg))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Converge (output_result (bed))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="Converge (output_result (full))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="Converge (output_result (simple))" toProperty="snvs_report_result"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (acmg)" toOperation="Merge Reports (acmg)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="Merge Reports (bed)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="Merge Reports (full)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="Merge Reports (simple)" toProperty="use_header_from"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (acmg)" toOperation="output connector" toProperty="snvs_result (acmg)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (bed)" toOperation="output connector" toProperty="snvs_result (bed)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (full)" toOperation="output connector" toProperty="snvs_result (full)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (simple)" toOperation="output connector" toProperty="snvs_result (simple)"/>
    <link fromOperation="Variant Reporting (snvs)" fromProperty="output_result (vcf)" toOperation="output connector" toProperty="snvs_result (vcf)"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (acmg).contains_header" toOperation="Merge Reports (acmg)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (acmg).label" toOperation="Merge Reports (acmg)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (acmg).sort_columns" toOperation="Merge Reports (acmg)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (acmg)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).contains_header" toOperation="Merge Reports (bed)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).label" toOperation="Merge Reports (bed)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (bed).sort_columns" toOperation="Merge Reports (bed)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (bed)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).contains_header" toOperation="Merge Reports (full)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).label" toOperation="Merge Reports (full)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (full).sort_columns" toOperation="Merge Reports (full)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (full)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).contains_header" toOperation="Merge Reports (simple)" toProperty="contains_header"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).label" toOperation="Merge Reports (simple)" toProperty="label"/>
    <link fromOperation="input connector" fromProperty="Merge Reports (simple).sort_columns" toOperation="Merge Reports (simple)" toProperty="sort_columns"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Reports (simple)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (acmg).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (acmg).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (acmg).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (acmg).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (full).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (full).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (full).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (full).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (simple).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (simple).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (simple).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (simple).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (vcf).label" toOperation="Variant Reporting (indels)" toProperty="Generate Report (vcf).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).Generate Report (vcf).report_name" toOperation="Variant Reporting (indels)" toProperty="Generate Report (vcf).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).input_vcf" toOperation="Variant Reporting (indels)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).plan_json" toOperation="Variant Reporting (indels)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (indels).variant_type" toOperation="Variant Reporting (indels)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (indels)" toProperty="process_id"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (acmg).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (acmg).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (acmg).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (acmg).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (bed).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (full).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (full).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (full).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (full).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (simple).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (simple).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (simple).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (simple).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (vcf).label" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (vcf).label"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).Generate Report (vcf).report_name" toOperation="Variant Reporting (snvs)" toProperty="Generate Report (vcf).report_name"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).input_vcf" toOperation="Variant Reporting (snvs)" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).plan_json" toOperation="Variant Reporting (snvs)" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="Variant Reporting (snvs).variant_type" toOperation="Variant Reporting (snvs)" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="process_id" toOperation="Variant Reporting (snvs)" toProperty="process_id"/>
  </operation>
  <operation name="Merge Discovery and Followup Reports (bed)">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>report_results</inputproperty>
      <outputproperty>output_result</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Merge Discovery and Followup Reports (full)">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>report_results</inputproperty>
      <outputproperty>output_result</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Merge Discovery and Followup Reports (simple)">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Framework::MergeReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>report_results</inputproperty>
      <outputproperty>output_result</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <link fromOperation="Alignment stats" fromProperty="output_result" toOperation="output connector" toProperty="Alignment stats result"/>
  <link fromOperation="Converge (merged_result (bed))" fromProperty="report_results" toOperation="Merge Discovery and Followup Reports (bed)" toProperty="report_results"/>
  <link fromOperation="Converge (merged_result (full))" fromProperty="report_results" toOperation="Merge Discovery and Followup Reports (full)" toProperty="report_results"/>
  <link fromOperation="Converge (merged_result (simple))" fromProperty="report_results" toOperation="Merge Discovery and Followup Reports (simple)" toProperty="report_results"/>
  <link fromOperation="Converge for igv (test roi)" fromProperty="report_results" toOperation="Create IGV session (test roi)" toProperty="merged_bed_reports"/>
  <link fromOperation="Coverage stats" fromProperty="output_result" toOperation="output connector" toProperty="Coverage stats result"/>
  <link fromOperation="Create IGV session (test roi)" fromProperty="output_result" toOperation="output connector" toProperty="igv_session.test roi"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" fromProperty="merged_result (bed)" toOperation="Converge (merged_result (bed))" toProperty="discovery_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" fromProperty="merged_result (full)" toOperation="Converge (merged_result (full))" toProperty="discovery_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" fromProperty="merged_result (simple)" toOperation="Converge (merged_result (simple))" toProperty="discovery_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" fromProperty="merged_result (bed)" toOperation="Converge for igv (test roi)" toProperty="discovery_bed_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" fromProperty="merged_result (bed)" toOperation="Merge Discovery and Followup Reports (bed)" toProperty="use_header_from"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" fromProperty="merged_result (full)" toOperation="Merge Discovery and Followup Reports (full)" toProperty="use_header_from"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" fromProperty="merged_result (simple)" toOperation="Merge Discovery and Followup Reports (simple)" toProperty="use_header_from"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" fromProperty="merged_result (bed)" toOperation="Converge for igv (test roi)" toProperty="docm_bed_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" fromProperty="merged_result (bed)" toOperation="Converge (merged_result (bed))" toProperty="followup_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" fromProperty="merged_result (full)" toOperation="Converge (merged_result (full))" toProperty="followup_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" fromProperty="merged_result (simple)" toOperation="Converge (merged_result (simple))" toProperty="followup_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" fromProperty="merged_result (bed)" toOperation="Converge for igv (test roi)" toProperty="followup_bed_report_result"/>
  <link fromOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" fromProperty="merged_result (bed)" toOperation="Converge for igv (test roi)" toProperty="germline_bed_report_result"/>
  <link fromOperation="Merge Discovery and Followup Reports (bed)" fromProperty="output_result" toOperation="output connector" toProperty="test roi-discovery_and_followup.merged.bed"/>
  <link fromOperation="Merge Discovery and Followup Reports (full)" fromProperty="output_result" toOperation="output connector" toProperty="test roi-discovery_and_followup.merged.full"/>
  <link fromOperation="Merge Discovery and Followup Reports (simple)" fromProperty="output_result" toOperation="output connector" toProperty="test roi-discovery_and_followup.merged.simple"/>
  <link fromOperation="input connector" fromProperty="Alignment stats.models" toOperation="Alignment stats" toProperty="models"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Alignment stats" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Coverage stats.models" toOperation="Coverage stats" toProperty="models"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Coverage stats" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Create IGV session (test roi).bam_hash_json" toOperation="Create IGV session (test roi)" toProperty="bam_hash_json"/>
  <link fromOperation="input connector" fromProperty="Create IGV session (test roi).genome_name" toOperation="Create IGV session (test roi)" toProperty="genome_name"/>
  <link fromOperation="input connector" fromProperty="Create IGV session (test roi).label" toOperation="Create IGV session (test roi)" toProperty="label"/>
  <link fromOperation="input connector" fromProperty="Create IGV session (test roi).reference_name" toOperation="Create IGV session (test roi)" toProperty="reference_name"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Create IGV session (test roi)" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (bed).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (bed).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (bed).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (bed).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (full).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (full).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (full).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (full).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (simple).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (simple).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Merge Reports (simple).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Merge Reports (simple).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (full).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (full).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (simple).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (simple).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (vcf).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (vcf).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).Generate Report (vcf).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).Generate Report (vcf).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (indels).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (indels).variant_type"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (full).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (full).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (simple).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (simple).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (vcf).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (vcf).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).Generate Report (vcf).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).Generate Report (vcf).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-discovery).Variant Reporting (snvs).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="Variant Reporting (snvs).variant_type"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Create Snvs, Indels, and Merged Reports (test roi-discovery)" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (bed).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Merge Reports (bed).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Merge Reports (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (bed).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Merge Reports (bed).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (docm).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Merge Reports (docm).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (docm).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Merge Reports (docm).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Merge Reports (docm).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Merge Reports (docm).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (indels).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (indels).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (docm).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (indels).Generate Report (docm).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).Generate Report (docm).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (indels).Generate Report (docm).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (indels).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (indels).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (indels).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (indels).variant_type"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (snvs).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (snvs).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (docm).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (snvs).Generate Report (docm).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).Generate Report (docm).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (snvs).Generate Report (docm).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (snvs).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (snvs).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-docm).Variant Reporting (snvs).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="Variant Reporting (snvs).variant_type"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Create Snvs, Indels, and Merged Reports (test roi-docm)" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (bed).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (bed).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (bed).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (bed).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (full).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (full).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (full).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (full).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (simple).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (simple).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Merge Reports (simple).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Merge Reports (simple).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (full).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (full).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (simple).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (simple).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (vcf).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (vcf).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).Generate Report (vcf).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).Generate Report (vcf).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (indels).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (indels).variant_type"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (full).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (full).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (simple).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (simple).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (vcf).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (vcf).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).Generate Report (vcf).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).Generate Report (vcf).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-followup).Variant Reporting (snvs).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="Variant Reporting (snvs).variant_type"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Create Snvs, Indels, and Merged Reports (test roi-followup)" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (acmg).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (acmg).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (acmg).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (acmg).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (acmg).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (acmg).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (bed).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (bed).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (bed).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (bed).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (full).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (full).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (full).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (full).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (simple).contains_header" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (simple).contains_header"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Merge Reports (simple).sort_columns" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Merge Reports (simple).sort_columns"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (acmg).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (acmg).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (acmg).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (acmg).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (full).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (full).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (simple).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (simple).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (vcf).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (vcf).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).Generate Report (vcf).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).Generate Report (vcf).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (indels).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (indels).variant_type"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (acmg).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (acmg).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (acmg).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (acmg).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (bed).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (bed).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (bed).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (bed).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (full).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (full).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (full).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (full).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (simple).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (simple).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (simple).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (simple).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (vcf).label" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (vcf).label"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).Generate Report (vcf).report_name" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).Generate Report (vcf).report_name"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).input_vcf" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).input_vcf"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).plan_json" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).plan_json"/>
  <link fromOperation="input connector" fromProperty="Create Snvs, Indels, and Merged Reports (test roi-germline).Variant Reporting (snvs).variant_type" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="Variant Reporting (snvs).variant_type"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Create Snvs, Indels, and Merged Reports (test roi-germline)" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (bed).contains_header" toOperation="Merge Discovery and Followup Reports (bed)" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (bed).label" toOperation="Merge Discovery and Followup Reports (bed)" toProperty="label"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (bed).sort_columns" toOperation="Merge Discovery and Followup Reports (bed)" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Discovery and Followup Reports (bed)" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (full).contains_header" toOperation="Merge Discovery and Followup Reports (full)" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (full).label" toOperation="Merge Discovery and Followup Reports (full)" toProperty="label"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (full).sort_columns" toOperation="Merge Discovery and Followup Reports (full)" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Discovery and Followup Reports (full)" toProperty="process_id"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (simple).contains_header" toOperation="Merge Discovery and Followup Reports (simple)" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (simple).label" toOperation="Merge Discovery and Followup Reports (simple)" toProperty="label"/>
  <link fromOperation="input connector" fromProperty="Merge Discovery and Followup Reports (simple).sort_columns" toOperation="Merge Discovery and Followup Reports (simple)" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="process_id" toOperation="Merge Discovery and Followup Reports (simple)" toProperty="process_id"/>
</operation>
