#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use File::Slurp qw(read_file);
use Genome::VariantReporting::Command::Wrappers::TestHelpers qw(get_build compare_directories);
use Genome::VariantReporting::Framework::TestHelpers qw(test_dag_xml);
use Genome::Utility::Test qw(compare_ok);
use Sub::Install qw(reinstall_sub);

my $pkg = "Genome::VariantReporting::Command::Wrappers::ModelPair";

use_ok($pkg);

reinstall_sub({
    into => "Genome::VariantReporting::Command::Wrappers::ModelPair",
    as => "get_library_names",
    code => sub {return [qw(
        TEST-patient1-somval_tumor1-extlib
        TEST-patient1-somval_tumor2-extlib
        TEST-patient1-somval_normal1-extlib
    )]},
});

my $roi_name = "test_roi";
my $tumor_sample = Genome::Test::Factory::Sample->setup_object(name => "TEST-patient1-somval_tumor1");
my $normal_sample = Genome::Test::Factory::Sample->setup_object(
    source_id => $tumor_sample->source_id,
    name => "TEST-patient1-somval_normal1",
);
my $discovery_build = get_build($roi_name, $tumor_sample, $normal_sample);

is($discovery_build->class, "Genome::Model::Build::SomaticValidation");

my $model_pair = $pkg->create(
    common_translations => {
        library_name_labels => {
            foo => 'bar',
        },
        sample_name_labels => {
            baz => 'qux',
        },
    },
    discovery => $discovery_build,
    followup => $discovery_build,
    label => "test",
);
is($model_pair->class, $pkg, "Model pair created correctly");
test_dag_xml($model_pair->dag, __FILE__);

my $expected_params = {
    snvs_input_vcf => "/gscuser/aregier/git/genome/fix/lib/perl/Genome/VariantReporting/Command/Wrappers/TestHelpers.pm.d/TEST-patient1-somval_tumor1.snvs.vcf.gz",
    snvs_plan_file => "/gscuser/aregier/git/genome/fix/lib/perl/Genome/VariantReporting/plan_files/cle_snvs_report.yaml",
    snvs_translations_file => "/tmp/gm-genome_sys-2014-12-03_17_46_01--dy8W/anonymous6",
    indels_input_vcf => "/gscuser/aregier/git/genome/fix/lib/perl/Genome/VariantReporting/Command/Wrappers/TestHelpers.pm.d/TEST-patient1-somval_tumor1.snvs.vcf.gz",
    indels_plan_file => "/gscuser/aregier/git/genome/fix/lib/perl/Genome/VariantReporting/plan_files/cle_indels_report.yaml",
    indels_translations_file => "/tmp/gm-genome_sys-2014-12-03_17_46_01--dy8W/anonymous6",
    use_header_from => "snvs",
};
#TODO compare these in a sensible way
#is_deeply($expected_params, $model_pair->params_for_dag, "params were created correctly");
done_testing;


