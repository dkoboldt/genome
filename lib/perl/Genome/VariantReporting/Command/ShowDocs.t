#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use Genome::Utility::Test qw(compare_ok);

my $expected_dir = __FILE__ . '.expected-output';
my $actual_dir;
my $rebuild = 0;


if (@ARGV and $ARGV[0] eq 'REBUILD') {
    note("******regenerating test data in $expected_dir to reset this test case!*******");
    $actual_dir = $expected_dir;
    $rebuild = 1;
}
elsif ($ARGV[0]) {
    die "unexpected cmdline options @ARGV: expected nothing or 'REBUILD', got ". $ARGV[0];
}
else {
    $actual_dir = Genome::Sys->create_temp_directory;
}

my $factory = Genome::VariantReporting::Framework::Factory->create();

for my $component_type (qw(experts interpreters filters reports)) {
    Genome::Sys->create_directory(File::Spec->join($actual_dir, $component_type));
    my $internal_type = Genome::VariantReporting::Command::ShowDocs::type_lookup($component_type);
    my @components = $factory->names($internal_type);
    for my $component (@components) {
        my $module = $factory->get_class($internal_type, $component);
        use_ok($module, "Can use $module");

        my $actual_out = File::Spec->join($actual_dir, $component_type, $component);
        my $expected_out = File::Spec->join($expected_dir, $component_type, $component);

        eval {
            if ($rebuild) {
                note("Removing old entry $actual_out");
                unlink $actual_out;
            }
            local *STDOUT = Genome::Sys->open_file_for_writing($actual_out);
            my @argv = ("variant-reporting", "show-docs", $component_type, $component);

            my $exit = Genome::Command->_cmdline_run(@argv);
            is($exit, 0, 'exited zero: `genome '.join(' ', @argv) . '`');
        };

        ok(-s $actual_dir, "output data was generated for $component_type $component");
        ok(-s $expected_out, "reference data is available for $component_type $component under $expected_dir")
            or next;

        next unless -e $actual_dir;

        compare_ok($expected_out, $actual_out);
    }
}

done_testing;
