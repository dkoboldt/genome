#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use Genome::Utility::Test qw(compare_ok);
use Sub::Override;

my $pkg = 'Genome::VariantReporting::Reporter::BedReporter';
use_ok($pkg);

my $factory = Genome::VariantReporting::Framework::Factory->create();
isa_ok($factory->get_class('reporters', $pkg->name), $pkg);

my $data_dir = __FILE__.".d";

my $reporter = $pkg->create(file_name => 'bed', generate_legend_file => 0);
ok($reporter, "Reporter created successfully");

my $bed_interpreter = Genome::VariantReporting::Generic::BedEntryInterpreter->create();
$reporter->add_interpreter_object($bed_interpreter);

my $output_dir = Genome::Sys->create_temp_directory();
$reporter->initialize($output_dir);

my %interpretations = (
    'bed-entry' => {
        T => {
            chromosome_name => 1,
            start => 1,
            stop => 1,
        },
        G => {
            chromosome_name => 1,
            start => 1,
            stop => 1,
        },
    },
);

$reporter->report(\%interpretations);
$reporter->finalize();

compare_ok(File::Spec->join($output_dir, 'bed'), File::Spec->join($data_dir, "expected.out"), "Output as expected");

done_testing;
